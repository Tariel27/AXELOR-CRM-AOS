<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<object-views xmlns="http://axelor.com/xml/ns/object-views"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://axelor.com/xml/ns/object-views http://axelor.com/xml/ns/object-views/object-views_7.1.xsd">

    <action-view name="pbp.tasks.all" title="All Tasks" model="com.axelor.apps.project.db.ProjectTask">
        <view type="kanban" name="pbp.project-task.kanban"/>
        <view type="grid" name="pbp.project-task.grid"/>
        <view type="form" name="pbp.project-task.form"/>
        <view-param name="search-filters" value="project-task-filters"/>
        <view-param name="auto-reload" value="20"/>
        <domain>self.typeSelect = :_typeSelect</domain>
        <context name="_typeSelect" expr="eval: 'task'"/>
    </action-view>

    <action-view name="pbp.tasks.byUser" title="My Tasks" model="com.axelor.apps.project.db.ProjectTask">
        <view type="kanban" name="pbp.project-task.kanban"/>
        <view type="form" name="pbp.project-task.form"/>
        <view type="grid" name="pbp.project-task.grid"/>
        <view-param name="search-filters" value="project-task-filters"/>
        <view-param name="auto-reload" value="20"/>
        <domain>self.assignedTo = :__user__ AND self.typeSelect = :_typeSelect</domain>
        <context name="_typeSelect" expr="eval: 'task'"/>
    </action-view>

    <form name="pbp.project-task.form" title="Task" model="com.axelor.apps.project.db.ProjectTask" width="large"
          onNew="pbp.project-task.on-new">
        <panel>
            <panel name="statusPanel" colSpan="12" stacked="true" hideIf="$popup()">
                <field name="status" showTitle="false" widget="NavSelect" x-order="sequence"/>
                <field name="typeSelect" hidden="true"/>
            </panel>
            <field name="name" required="true"/>
            <field name="project" required="true"/>
            <field name="description" widget="html" colSpan="12"/>
            <field name="assignedTo" required="true"/>
            <field name="assignedBy"/>
        </panel>
        <panel title="Additionally" collapseIf="true">
            <field name="projectTaskCategory"/>
            <field name="projectTaskSection"/>
            <field name="projectTaskTagSet" widget="TagSelect"/>
            <field name="parentTask"/>
            <field name="descriptionOfChange" widget="html" colSpan="12"/>
        </panel>
        <panel sidebar="true">
            <field name="complexity" widget="SingleSelect" colSpan="6" required="true"/>
            <field name="priority" colSpan="6" target-name="name" required="true"/>
            <field name="planHours" required="true"/>
            <field name="taskDate" colSpan="8" hideIf="$popup()"/>
            <field name="startDateTime" colSpan="4" showTitle="false" hideIf="$popup()"/>
            <field name="taskEndDate" colSpan="8" hideIf="$popup()"/>
            <field name="endDateTime" colSpan="4" showTitle="false" hideIf="$popup()"/>
            <field name="taskDeadline" colSpan="8" required="true"/>
            <field name="deadlineDateTime" colSpan="4" showTitle="false" required="true"/>
        </panel>
        <panel-mail name="mailPanel">
            <mail-messages/>
            <mail-followers/>
        </panel-mail>
    </form>

    <kanban name="pbp.project-task.kanban" title="Tasks" model="com.axelor.apps.project.db.ProjectTask"
            columnBy="status" sequenceBy="sequence" draggable="true" limit="30">
        <toolbar>
            <button name="createTask" title="Create task (easy)" onClick="pbp.project-mini-task"/>
            <button name="exportBtn" onClick="pbp.tasks.export.excel.action-view" icon="fa-print"/>
        </toolbar>
        <field name="name"/>
        <field name="project"/>
        <field name="assignedTo"/>
        <field name="priority.name"/>
        <field name="priority.technicalTypeSelect"/>
        <field name="progress"/>
        <field name="project.isShowProgress"/>
        <field name="taskDate"/>
        <field name="startDateTime"/>
        <field name="taskEndDate"/>
        <field name="endDateTime"/>
        <field name="taskDeadline"/>
        <field name="deadlineDateTime"/>
        <field name="complexity"/>
        <template>
            <![CDATA[
                <>
                    <strong>{name}</strong>
                        <Box style={{ fontWeight: "bold", fontSize: "1.1rem", color: "#1890ff", marginTop: "5px" }}>
                            {project.fullName}
                        </Box>
                    <Box d="flex" justifyContent="space-between">
                        <Box>
                            <Icon icon="calendar" fontSize="15px"/><span>{_t('Deadline')}: {$moment(taskDeadline).format('YYYY-MM-DD')} {deadlineDateTime}</span>
                        </Box>
                    </Box>
                    <Box d="flex" justifyContent="flex-start">
                        {priority.technicalTypeSelect == 1 && <Badge bg="success" style={{ marginRight: "5px" }}>Приоритет: {priority.name}</Badge>}
                        {priority.technicalTypeSelect == 2 && <Badge bg="info" style={{ marginRight: "5px" }}>Приоритет: {priority.name}</Badge>}
                        {priority.technicalTypeSelect == 3 && <Badge bg="warning" style={{ marginRight: "5px" }}>Приоритет: {priority.name}</Badge>}
                        {priority.technicalTypeSelect == 4 && <Badge bg="danger" style={{ marginRight: "5px" }}>Приоритет: {priority.name}</Badge>}
                        {complexity == 'medium' && <Badge style={{ backgroundColor: "#0a40f2" }}>Сложность: {_t('Medium')}</Badge>}
                        {complexity == 'easy' && <Badge style={{ backgroundColor: "#4CF907" }}>Сложность: {_t('Easy')}</Badge>}
                        {complexity == 'hard' && <Badge style={{ backgroundColor: "#f01000" }}>Сложность: {_t('Hard')}</Badge>}
                    </Box>
                    <Box d="grid" gridTemplateColumns="auto auto" style={{ fontSize: "0.85rem", color: "grey" }} mt={2}>
                        <Box d="flex" flexDirection="column">
                             {taskDate ? <span><Icon icon="clock" fontSize="15px"/>{_t('Start date')}: {$moment(taskDate).format('YYYY-MM-DD')} {startDateTime}</span> : <span>{_t('Not started')}</span>}
                             {taskEndDate ? <span><Icon icon="clock" fontSize="15px"/>{_t('End date')}: {$moment(taskEndDate).format('YYYY-MM-DD')} {endDateTime}</span> : <span>{_t('Not started')}</span>}
                        </Box>
                        <Box d="flex" justifyContent="flex-end">
                            {assignedTo && <Image src={$image('assignedTo', 'image')} style={{ width: "1.5rem", height: "1.5rem", borderRadius: "100%" }}></Image>}
                        </Box>
                    </Box>
                </>
            ]]>
        </template>
    </kanban>

    <grid name="pbp.project-task.grid" title="Tasks" model="com.axelor.apps.project.db.ProjectTask"
          edit-icon="true" orderBy="-priority.technicalTypeSelect">
        <hilite if="$get('status.id') == $get('project.completedTaskStatus.id')" color="success"/>
        <hilite if="$moment(taskEndDate).diff(todayDate,'days') &lt; 0" color="danger"/>
        <hilite if="$get('priority.technicalTypeSelect') == 4" color="warning"/>
        <field name="name"/>
        <field name="project"/>
        <field name="taskDate"/>
        <field name="taskEndDate" title="Task end date"/>
        <field name="taskDeadline" title="Task deadline"/>
        <field name="spentTime"/>
        <field name="planHours"/>
        <field name="status"/>
        <field name="complexity" widget="SingleSelect"/>
        <field name="descriptionOfChange" title="Subject of change"/>
        <field name="targetVersion" if-module="axelor-business-support"
               if="__config__.app.isApp('business-support')"/>
        <field name="taskEndDate" hidden="true"/>
        <field name="priority.technicalTypeSelect" hidden="true"/>
        <field name="project.completedTaskStatus.id" hidden="true"/>
    </grid>

    <action-view name="action-view-show-project-task-tree2" title="Project Task Tree"
                 model="com.axelor.apps.project.db.ProjectTask">
        <view type="tree" name="project-project-task-tree2"/>
        <view type="form" name="project-task-form"/>
        <domain>self.project.id = :_id AND self.parentTask = null</domain>
        <context name="_id" expr="eval: id"/>
    </action-view>

    <tree id="project-project-task-tree2" name="project-project-task-tree2" title="Task">
        <column name="name" type="string"/>
        <column name="taskDate" type="date"/>
        <!--        <column name="initial" type="decimal"/>-->
        <!--        <column name="forecast" type="decimal"/>-->
        <!--        <column name="real" type="decimal"/>-->
        <!--        <column name="landing" type="decimal"/>-->
        <column name="assignedTo" type="reference"/>
        <column name="createSubtaskBtn" type="button"/>
        <column name="generatePurchaseOrderBtn" type="button"/>
        <column name="deleteTaskBtn" type="button"/>
        <column name="openTaskBtn" type="button"/>
        <node model="com.axelor.apps.project.db.ProjectTask"
              onClick="action-project-task-view-task" domain="self.project.id = :_id" orderBy="taskDate">
            <field name="name" as="name"/>
            <field name="taskDate" as="taskDate"/>
            <field name="initialMarkup" as="initial"/>
            <field name="forecastMarkup" as="forecast"/>
            <field name="realMarkup" as="real"/>
            <field name="landingMarkup" as="landing"/>
            <field name="assignedTo" as="assignedTo"/>
            <field name="progress" as="progress"/>
            <button name="createSubtaskBtn" icon="fa-plus"
                    onClick="save, action-project-view-add-subtask"/>
            <button name="generatePurchaseOrderBtn" icon="fa-shopping-cart"
                    onClick="save, action-project-task-method-generate-purchase-order"/>
            <button name="deleteTaskBtn" icon="fa-times-circle"
                    onClick="action-project-task-validate-delete-team-task-confirmation,action-project-task-method-delete-project-task"/>
            <button name="openTaskBtn" icon="fa-external-link"
                    onClick="action-project-task-open-task"/>
        </node>
        <node model="com.axelor.apps.project.db.ProjectTask" parent="parentTask"
              onClick="action-project-task-view-task" draggable="true" orderBy="taskDate">
            <field name="name" as="name"/>
            <field name="taskDate" as="taskDate"/>
            <field name="assignedTo" as="assignedTo"/>
            <field name="progress" as="progress"/>
            <button name="createSubtaskBtn" icon="fa-plus"
                    onClick="save, action-project-view-add-subtask"/>
            <button name="generatePurchaseOrderBtn" icon="fa-shopping-cart"
                    onClick="save, action-project-task-method-generate-purchase-order"/>
            <button name="deleteTaskBtn" icon="fa-times-circle"
                    onClick="action-project-task-validate-delete-team-task-confirmation,action-project-task-method-delete-project-task"/>
            <button name="openTaskBtn" icon="fa-external-link"
                    onClick="action-project-task-open-task"/>
        </node>
    </tree>

    <action-attrs name="pbp.auto-set-complexity">
        <attribute for="complexity" name="value" expr="eval: 'ease'"/>
    </action-attrs>

    <action-record name="pbp.project-task.on-new" model="com.axelor.apps.project.db.ProjectTask">
        <field name="status" expr="eval: __repo__(TaskStatus).find(1)"/>
        <field name="assignedTo" expr="eval: __user__"/>
        <field name="assignedBy" expr="eval: __user__"/>
        <field name="complexity" expr="eval: 'easy'"/>
        <field name="priority" expr="eval: __repo__(ProjectPriority).find(1)"/>
        <field name="planHours" expr="eval: '02:00:00'"/>
        <field name="taskDeadline" expr="eval: __date__.plusDays(3)"/>
        <field name="deadlineDateTime" expr="eval: '19:00:00'"/>
    </action-record>
    
    <action-view name="pbp.project-mini-task" title="Task" model="com.axelor.apps.project.db.ProjectTask">
        <view type="form" name="pbp.project-task.form"/>
        <view-param name="forceEdit" value="true"/>
        <view-param name="popup" value="reload"/>
        <view-param name="show-toolbar" value="false"/>
    </action-view>


    <action-view name="pbp.tasks.export.excel.action-view" title="Generating report" model="com.axelor.apps.project.db.ProjectTask">
        <view type="form" name="pbp.tasks.export-excel-form"/>
        <view-param name="popup" value="true"/>
        <view-param name="popup-save" value="false"/>
        <view-param name="show-toolbar" value="false"/>
        <view-param name="show-confirm" value="false"/>
    </action-view>

    <form title="Generating report" name="pbp.tasks.export-excel-form" model="com.axelor.apps.project.db.ProjectTask">
        <panel colSpan="12">
            <field name="startDate" widget="date" x-dirty="false" colSpan="6" title="Start date"/>
            <field name="endDate" widget="date" x-dirty="false" colSpan="6" title="End date"/>
            <separator colSpan="12"/>
            <button name="generateByPeriodBtn" onClick="pbp.tasks.export.excel.by.period.validate.action-condition,pbp.tasks.export.excel.by.period.action-method,close" title="Generate report by period"/>
            <button name="generateByCurrentMonthBtn" onClick="pbp.tasks.export.excel.for.current.month.action-method,close" title="Generate report for current month"/>
        </panel>
    </form>

    <action-method name="pbp.tasks.export.excel.by.period.action-method">
        <call class="com.axelor.apps.pbproject.web.PBPProjectTaskController" method="generateReportByPeriod"/>
    </action-method>

    <action-method name="pbp.tasks.export.excel.for.current.month.action-method">
        <call class="com.axelor.apps.pbproject.web.PBPProjectTaskController" method="generateReportForCurrentMonth"/>
    </action-method>

    <action-condition name="pbp.tasks.export.excel.by.period.validate.action-condition">
        <check field="startDate" if="startDate == null" error="Start date is required"/>
        <check field="endDate" if="endDate == null" error="End date is required"/>
    </action-condition>

</object-views>
